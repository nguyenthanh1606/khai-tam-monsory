@mixin size($width: null, $height: false) {
    width: $width;

    @if($height) {
        height: $height;
    }
}

@mixin size100 {
    width: 100%;
    height: 100%;
}

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    border-radius: $radius;
}

@mixin border-tl-radius($radius) {
    -webkit-border-top-left-radius: $radius;
    border-top-left-radius: $radius;
}

@mixin border-tr-radius($radius) {
    -webkit-border-top-right-radius: $radius;
    border-top-right-radius: $radius;
}

@mixin border-bl-radius($radius) {
    -webkit-border-bottom-left-radius: $radius;
    border-bottom-left-radius: $radius;
}

@mixin border-br-radius($radius) {
    -webkit-border-bottom-right-radius: $radius;
    border-bottom-right-radius: $radius;
}

@mixin img-fit($value1: null, $value2: null) {
    @if ($value1 == null) {
        width: $value1;
        object-fit: $value2;
        -o-object-fit: $value2;
    }
    @else {
        width: $value1;
        object-fit: $value2;
        -o-object-fit: $value2;
    }
}

@mixin transform($pro...) {
    transform: $pro;
    -webkit-transform: $pro;
    -moz-transform: $pro;
    -ms-transform:$pro;
    -o-transform:$pro;
}

@mixin transition($pro...) {
    transition: $pro;
    -webkit-transition: $pro;
    -moz-transition: $pro;
}

@mixin box-sizing($pro) {
    box-sizing: $pro;
    -webkit-box-sizing: $pro;
    -moz-box-sizing: $pro;
}

@mixin box-shadow($val_1, $val_2, $val_3,$blur,$color, $inset: false) {
    @if $inset == true {
        box-shadow: inset $val_1 $val_2 $val_3 $blur $color;
        -webkit-box-shadow: inset $val_1 $val_2 $val_3 $blur $color;
        -moz-box-shadow: inset $val_1 $val_2 $val_3 $blur $color;
    }
    @else {
        box-shadow: $val_1 $val_2 $val_3 $blur $color;
        -webkit-box-shadow: $val_1 $val_2 $val_3 $blur $color;
        -moz-box-shadow: $val_1 $val_2 $val_3 $blur $color;
    }
}

@mixin filter($val) {
    filter: $val;
    -webkit-filter: $val;
}

@mixin before( $val: null, $top: null, $left: null, $right: null, $bottom: null ) {
    content: $val;
    position: absolute;
    top: $top;
    left: $left;
    right: $right;
    bottom: $bottom;
}

@mixin text($value: null, $lh: null, $transform: null, $decor: null) {
    font: $value;
    line-height: $lh;
    text-transform: $transform;
    text-decoration: $decor;
}
@mixin flex($content: null, $item: null, $wrap: null) {
    display: flex;
    justify-content: $content;
    align-items: $item;
    flex-wrap: $wrap;
    -webkit-flex-align:$item;
    -webkit-justify-content:$content;
}

@mixin grid($value1, $value2, $value3: null, $value4: null, $gap: null) {
    display: grid;
    grid-template-columns: $value1;
    grid-template-rows: $value2;
    justify-content: $value3;
    align-items: $value4;
    grid-gap: $gap;
}

@mixin animation($animation, $duration, $timing, $delay: null, $count: null) {
    -webkit-animation-name: $animation;
    -webkit-animation-duration: $duration;
    -webkit-animation-timing-function: $timing;
    -webkit-animation-delay: $delay;
    -webkit-animation-iteration-count: $count;
    -moz-animation-name: $animation;
    -moz-animation-duration: $duration;
    -moz-animation-timing-function: $timing;
    -moz-animation-delay: $delay;
    -moz-animation-iteration-count: $count;
    -o-animation-name: $animation;
    -o-animation-duration: $duration;
    -o-animation-timing-function: $timing;
    -o-animation-delay: $delay;
    -o-animation-iteration-count: $count;
    animation-name: $animation;
    animation-duration: $duration;
    animation-timing-function: $timing;
    animation-delay: $delay;
    animation-iteration-count: $count;
}

// variable responsive
$S: 480px;
$M: 768px;
$L: 998px;
$XL: 1200px;
$CS_MAX: 990px;
$CS_MIN: 769px;

@mixin MQ($canvas) {
    @if $canvas == S {
        @media only screen and (min-width: $S) {
            @content;
        }
    }
    @else if $canvas == M {
        @media only screen and (min-width: $M) {
            @content;
        }
    }
    @else if $canvas == L {
        @media only screen and (min-width: $L) {
            @content;
        }
    }
    @else if $canvas == XL {
        @media only screen and (min-width: $XL) {
            @content;
        }
    }
    @else if $canvas == CS {
        @media only screen and (min-width: $CS_MIN) and (max-width: $CS_MAX) {
            @content;
        }
    }
    @else if $canvas == CSM {
        @media only screen and (min-width: 320px) and (max-width: 767px) {
            @content;
        }
    }
    @else if $canvas == CST {
        @media only screen and (min-width: 768px) and (max-width: 1000px) {
            @content;
        }
    }
}
